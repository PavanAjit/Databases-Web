[{"D:\\Spring 2021\\CSC 8711 Databases and Web\\project1\\project1frontend\\src\\index.js":"1","D:\\Spring 2021\\CSC 8711 Databases and Web\\project1\\project1frontend\\src\\App.js":"2","D:\\Spring 2021\\CSC 8711 Databases and Web\\project1\\project1frontend\\src\\reportWebVitals.js":"3","D:\\Spring 2021\\CSC 8711 Databases and Web\\project1\\project1frontend\\src\\DataBaseTables.js":"4","D:\\Spring 2021\\CSC 8711 Databases and Web\\project1\\project1frontend\\src\\QBEInterface.js":"5","D:\\Spring 2021\\CSC 8711 Databases and Web\\project1\\project1frontend\\src\\QueryResuts.js":"6","D:\\Spring 2021\\CSC 8711 Databases and Web\\project1\\project1frontend\\src\\test.js":"7","D:\\Spring 2021\\CSC 8711 Databases and Web\\project1\\project1frontend\\src\\Login.js":"8"},{"size":813,"mtime":1611640208731,"results":"9","hashOfConfig":"10"},{"size":528,"mtime":1611630082720,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":4247,"mtime":1612301733330,"results":"13","hashOfConfig":"10"},{"size":3860,"mtime":1612341916698,"results":"14","hashOfConfig":"10"},{"size":414,"mtime":1611627646411,"results":"15","hashOfConfig":"10"},{"size":2122,"mtime":1611640125090,"results":"16","hashOfConfig":"10"},{"size":3342,"mtime":1612213681821,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},"1515jyp",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"21"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"D:\\Spring 2021\\CSC 8711 Databases and Web\\project1\\project1frontend\\src\\index.js",["40","41","42","43","44"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Login from './Login';\nimport DataBaseTables from './DataBaseTables';\nimport QBEInterface from './QBEInterface';\nimport QueryResuts from './QueryResuts';\nimport Test from './test';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <App /> */}\n    <Login />\n    {/* <Test/> */}\n    {/* <DataBaseTables/> */}\n    {/* <QBEInterface/>\n    <QueryResuts/> */}\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n",["45","46"],"D:\\Spring 2021\\CSC 8711 Databases and Web\\project1\\project1frontend\\src\\App.js",[],"D:\\Spring 2021\\CSC 8711 Databases and Web\\project1\\project1frontend\\src\\reportWebVitals.js",[],["47","48"],"D:\\Spring 2021\\CSC 8711 Databases and Web\\project1\\project1frontend\\src\\DataBaseTables.js",["49","50","51"],"import React from 'react'\r\nimport axios from 'axios'\r\nimport QBEInterface from './QBEInterface';\r\n\r\nfunction DataBaseTables(props) {\r\n  // const range=[{key:0,text:0,value:0},{key:1,text:1,value:1},{key:2,text:2,value:2}];\r\n  const tableDict={}\r\n  const skeleton={}\r\n  let[tableCount,setTableCount]=React.useState('')\r\n  let[skeletonData,setSkeletonData]=React.useState('')\r\n\r\n  const getSkeletons = e => {\r\n    e.preventDefault()\r\n    for (var key in props.tables){\r\n      tableDict[props.tables[key]]='';\r\n    }\r\n    \r\n    for(var key in tableDict){\r\n      var e=document.getElementById(key);\r\n      tableDict[key]=e.value;\r\n    }\r\n    setTableCount(tableDict)\r\n    const queryString='columns(user:\"'+props.username+'\",passwd:\"'+props.password+'\",database:\"'+props.database+'\"){column,table}'\r\n    const url=\"http://127.0.0.1:5000/graphql?query={\"+queryString+\"}\"\r\n    axios.get(url)\r\n    .then((response)=>{\r\n      var skel;\r\n      for (skel of response.data.data.columns){\r\n        if (!skeleton[skel.table]) {\r\n        skeleton[skel.table] = [skel.column];\r\n        }\r\n        else{\r\n          skeleton[skel.table].push(skel.column);        \r\n        }\r\n      }\r\n      // alert(JSON.stringify(tableCount))\r\n      setSkeletonData(skeleton)\r\n      // alert(JSON.stringify(skeleton))\r\n    })\r\n    .catch((error) => {\r\n      alert(error)\r\n    })\r\n      \r\n    };\r\n\r\n  const resetSkeletons = e => {\r\n      setSkeletonData('')\r\n    };\r\n\r\n  const checkSelected=e=>{\r\n    // tableDict.push({key:e.target.id,value:e.target.value})\r\n    tableDict[e.target.id]=e.target.value\r\n    // alert(JSON.stringify(tableDict))\r\n  }\r\n\r\n    return (\r\n      <div className=\"DataBaseTables\">\r\n        <header className=\"DataBaseTables-header\" style={{marginTop:'25px',marginLeft:'25px'}}>\r\n            <label id='DataBaseTableslbl' style={{color:'#003399'}}><b>Database Tables</b></label>\r\n            <br/>\r\n            {/* <ul>\r\n                            {props.tables.map(table =>\r\n                              <li tableLbl={table.tablename}>{table.tablename}</li>\r\n                            )}\r\n                        </ul>  */}\r\n            <table>\r\n                <thead>\r\n                    <tr style={{textAlign:'left'}}>\r\n                    <th>Database</th>\r\n                    <th>Count</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {/* <td>\r\n                    {props.tables.map(table =><tr>{table.tablename}</tr>)}\r\n                    <tr><button onClick={getSkeletons}>Get Skeletons</button></tr>\r\n                  </td>\r\n                  <td>\r\n                    {props.tables.map(table =>\r\n                      <tr>\r\n                        <select id={table.tablename} onChange={checkSelected}>\r\n                            <option value=\"0\" selected>0</option>\r\n                            <option value=\"1\" >1</option>\r\n                            <option value=\"2\">2</option>\r\n                        </select>\r\n                      </tr>)}\r\n                      <tr><button onClick={resetSkeletons}>Reset Skeletons</button></tr>\r\n                  </td> */}\r\n                  <td>\r\n                    {props.tables.map(table =><tr style={{height:'25px'}}>{table}</tr>)}\r\n                    <tr style={{height:'25px'}}><button onClick={getSkeletons}>Get Skeletons</button></tr>\r\n                  </td>\r\n                  <td>\r\n                    {props.tables.map(table =>\r\n                      <tr style={{height:'25px'}}>\r\n                        <select id={table} >\r\n                            <option value=\"0\" selected>0</option>\r\n                            <option value=\"1\" >1</option>\r\n                            <option value=\"2\">2</option>\r\n                        </select>\r\n                      </tr>)}\r\n                      <tr style={{height:'25px'}}><button onClick={resetSkeletons}>Reset Skeletons</button></tr>\r\n                  </td>\r\n                </tbody>\r\n            </table>\r\n        </header>\r\n        {(skeletonData && <QBEInterface tableSkeleton={skeletonData} username={props.username} password={props.password} database={props.database} tblCount={tableCount}/>) || \"\"}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  export default DataBaseTables;",["52","53"],"D:\\Spring 2021\\CSC 8711 Databases and Web\\project1\\project1frontend\\src\\QBEInterface.js",["54","55"],"import React from 'react'\r\nimport axios from 'axios'\r\n\r\n\r\n\r\nfunction QBEInterface(props) {\r\n  // alert(JSON.stringify(props.tblCount))\r\n  let[tableCont,setTableCont]=React.useState('');\r\n  let[queryData,setQueryData]=React.useState('')\r\n\r\n  const changeText = e => {\r\n    // var tempList=[]\r\n    // tempList.push(e.target.id)\r\n    // for (var x in tableCont){\r\n    //   if(!tempList.includes(tableCont[x])){\r\n    //     tempList.push(tableCont[x])\r\n    //   }\r\n    // }\r\n    // setTableCont(tempList)\r\n    // // alert(JSON.stringify(tableCont))\r\n    };\r\n\r\n  const repeatTable=e=>{\r\n    // alert(\"Inside\")\r\n    let tableContent=[]\r\n    for(let item in e)\r\n    {\r\n      for(let i=1;i<=e[item];i++){\r\n        // alert(props.tableSkeleton[item])\r\n        tableContent.push(\r\n          <div>\r\n            <table style={{border:'1px solid black'}}>\r\n              <thead>\r\n                <tr>\r\n                  <th style={{width:'1px',border:'1px solid black'}}>{item}</th>\r\n                  {props.tableSkeleton[item].map(column=><th style={{width:'1px',border:'1px solid black'}}>{column}</th>)}\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr>\r\n                  <td>\r\n                    <input type=\"text\" id={item+\"_\"+(i-1)} onChange={changeText}></input>\r\n                  </td>\r\n                  {props.tableSkeleton[item].map(column=><td><input type=\"text\" id={item+\"_\"+(i-1)+\".\"+column} onChange={changeText}></input></td>)}\r\n                </tr>\r\n                </tbody>\r\n            </table>\r\n            <br/>\r\n          </div>\r\n          \r\n        )\r\n      }\r\n    }\r\n    return tableContent;    \r\n  }\r\n  const getQuery=e=>{\r\n    var jsonQuery = [];\r\n\r\n    for(let item in props.tblCount){\r\n      for(let i=1;i<=props.tblCount[item];i++){\r\n        // alert(item)\r\n        for(let column in props.tableSkeleton[item]){\r\n          // alert((props.tableSkeleton[item])[column])\r\n          jsonQuery.push({\r\n            \"field\":(item+\"_\"+(i-1)+\".\"+(props.tableSkeleton[item])[column]),\r\n            \"value\":document.getElementById(item+\"_\"+(i-1)+\".\"+(props.tableSkeleton[item])[column]).value\r\n          })\r\n        }\r\n        jsonQuery.push({\r\n            \"field\":(item+\"_\"+(i-1)),\r\n            \"value\":document.getElementById(item+\"_\"+(i-1)).value\r\n          })\r\n      }\r\n    }\r\n    // for(var i in tableCont)\r\n    // {\r\n    //   jsonQuery.push(\r\n    //         {\r\n    //           \"field\": tableCont[i], \r\n    //           \"value\": document.getElementById(tableCont[i]).value\r\n    //         });\r\n    // }\r\n    jsonQuery.push({\"field\": \"Condition\",\"value\": document.getElementById(\"txtCondition\").value})\r\n    console.log(JSON.stringify(jsonQuery))\r\n    jsonQuery = btoa(JSON.stringify(jsonQuery));\r\n    \r\n    const queryString='qbe(user:\"'+props.username+'\",passwd:\"'+props.password+'\",database:\"'+props.database+'\",qbequery:\"'+jsonQuery+'\")'\r\n        const url=\"http://127.0.0.1:5000/graphql?query={\"+queryString+\"}\"\r\n        axios.post(url)\r\n        .then((response)=>{\r\n            setQueryData(response.data)\r\n            alert(JSON.stringify(queryData))\r\n        })\r\n        .catch((error) => {\r\n            alert(error)\r\n        })\r\n  };\r\n\r\n      return (\r\n       <div className=\"QBEInterface\" style={{marginTop:'25px',marginLeft:'25px'}}>\r\n        <header className=\"QBEInterface-header\" style={{marginTop:'25px'}}>\r\n          <div>\r\n            <label id='QBEInterfacelbl' style={{color:'#003399'}}><b>QBE Interface</b></label>\r\n            <br/>\r\n            <br/>\r\n          </div>\r\n          {repeatTable(props.tblCount)}\r\n          Condition: <input type=\"text\" style={{textTransform:'uppercase'}} id=\"txtCondition\"></input>\r\n          <br/>\r\n          <br/>\r\n          <button onClick={getQuery}>Run Query</button>\r\n        </header>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default QBEInterface\r\n","D:\\Spring 2021\\CSC 8711 Databases and Web\\project1\\project1frontend\\src\\QueryResuts.js",[],"D:\\Spring 2021\\CSC 8711 Databases and Web\\project1\\project1frontend\\src\\test.js",[],"D:\\Spring 2021\\CSC 8711 Databases and Web\\project1\\project1frontend\\src\\Login.js",[],{"ruleId":"56","severity":1,"message":"57","line":4,"column":8,"nodeType":"58","messageId":"59","endLine":4,"endColumn":11},{"ruleId":"56","severity":1,"message":"60","line":6,"column":8,"nodeType":"58","messageId":"59","endLine":6,"endColumn":22},{"ruleId":"56","severity":1,"message":"61","line":7,"column":8,"nodeType":"58","messageId":"59","endLine":7,"endColumn":20},{"ruleId":"56","severity":1,"message":"62","line":8,"column":8,"nodeType":"58","messageId":"59","endLine":8,"endColumn":19},{"ruleId":"56","severity":1,"message":"63","line":9,"column":8,"nodeType":"58","messageId":"59","endLine":9,"endColumn":12},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"64","replacedBy":"68"},{"ruleId":"66","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":18,"column":13,"nodeType":"58","messageId":"72","endLine":18,"endColumn":16},{"ruleId":"70","severity":1,"message":"73","line":19,"column":11,"nodeType":"58","messageId":"72","endLine":19,"endColumn":12},{"ruleId":"56","severity":1,"message":"74","line":50,"column":9,"nodeType":"58","messageId":"59","endLine":50,"endColumn":22},{"ruleId":"64","replacedBy":"75"},{"ruleId":"66","replacedBy":"76"},{"ruleId":"56","severity":1,"message":"77","line":8,"column":7,"nodeType":"58","messageId":"59","endLine":8,"endColumn":16},{"ruleId":"56","severity":1,"message":"78","line":8,"column":17,"nodeType":"58","messageId":"59","endLine":8,"endColumn":29},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","'DataBaseTables' is defined but never used.","'QBEInterface' is defined but never used.","'QueryResuts' is defined but never used.","'Test' is defined but never used.","no-native-reassign",["79"],"no-negated-in-lhs",["80"],["79"],["80"],"no-redeclare","'key' is already defined.","redeclared","'e' is already defined.","'checkSelected' is assigned a value but never used.",["79"],["80"],"'tableCont' is assigned a value but never used.","'setTableCont' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]